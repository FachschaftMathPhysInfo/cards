"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright: Ankitects Pty Ltd and contributors
License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
"""
import anki.cards_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CardStatsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class StatsRevlogEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TIME_FIELD_NUMBER: builtins.int
        REVIEW_KIND_FIELD_NUMBER: builtins.int
        BUTTON_CHOSEN_FIELD_NUMBER: builtins.int
        INTERVAL_FIELD_NUMBER: builtins.int
        EASE_FIELD_NUMBER: builtins.int
        TAKEN_SECS_FIELD_NUMBER: builtins.int
        time: builtins.int
        review_kind: global___RevlogEntry.ReviewKind.ValueType
        button_chosen: builtins.int
        interval: builtins.int
        """seconds"""
        ease: builtins.int
        """per mill"""
        taken_secs: builtins.float
        def __init__(
            self,
            *,
            time: builtins.int = ...,
            review_kind: global___RevlogEntry.ReviewKind.ValueType = ...,
            button_chosen: builtins.int = ...,
            interval: builtins.int = ...,
            ease: builtins.int = ...,
            taken_secs: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["button_chosen", b"button_chosen", "ease", b"ease", "interval", b"interval", "review_kind", b"review_kind", "taken_secs", b"taken_secs", "time", b"time"]) -> None: ...

    REVLOG_FIELD_NUMBER: builtins.int
    CARD_ID_FIELD_NUMBER: builtins.int
    NOTE_ID_FIELD_NUMBER: builtins.int
    DECK_FIELD_NUMBER: builtins.int
    ADDED_FIELD_NUMBER: builtins.int
    FIRST_REVIEW_FIELD_NUMBER: builtins.int
    LATEST_REVIEW_FIELD_NUMBER: builtins.int
    DUE_DATE_FIELD_NUMBER: builtins.int
    DUE_POSITION_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    EASE_FIELD_NUMBER: builtins.int
    REVIEWS_FIELD_NUMBER: builtins.int
    LAPSES_FIELD_NUMBER: builtins.int
    AVERAGE_SECS_FIELD_NUMBER: builtins.int
    TOTAL_SECS_FIELD_NUMBER: builtins.int
    CARD_TYPE_FIELD_NUMBER: builtins.int
    NOTETYPE_FIELD_NUMBER: builtins.int
    MEMORY_STATE_FIELD_NUMBER: builtins.int
    FSRS_RETRIEVABILITY_FIELD_NUMBER: builtins.int
    CUSTOM_DATA_FIELD_NUMBER: builtins.int
    @property
    def revlog(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CardStatsResponse.StatsRevlogEntry]: ...
    card_id: builtins.int
    note_id: builtins.int
    deck: builtins.str
    added: builtins.int
    """Unix timestamps"""
    first_review: builtins.int
    latest_review: builtins.int
    due_date: builtins.int
    due_position: builtins.int
    interval: builtins.int
    """days"""
    ease: builtins.int
    """per mill"""
    reviews: builtins.int
    lapses: builtins.int
    average_secs: builtins.float
    total_secs: builtins.float
    card_type: builtins.str
    notetype: builtins.str
    @property
    def memory_state(self) -> anki.cards_pb2.FsrsMemoryState: ...
    fsrs_retrievability: builtins.float
    """not set if due date/state not available"""
    custom_data: builtins.str
    def __init__(
        self,
        *,
        revlog: collections.abc.Iterable[global___CardStatsResponse.StatsRevlogEntry] | None = ...,
        card_id: builtins.int = ...,
        note_id: builtins.int = ...,
        deck: builtins.str = ...,
        added: builtins.int = ...,
        first_review: builtins.int | None = ...,
        latest_review: builtins.int | None = ...,
        due_date: builtins.int | None = ...,
        due_position: builtins.int | None = ...,
        interval: builtins.int = ...,
        ease: builtins.int = ...,
        reviews: builtins.int = ...,
        lapses: builtins.int = ...,
        average_secs: builtins.float = ...,
        total_secs: builtins.float = ...,
        card_type: builtins.str = ...,
        notetype: builtins.str = ...,
        memory_state: anki.cards_pb2.FsrsMemoryState | None = ...,
        fsrs_retrievability: builtins.float | None = ...,
        custom_data: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_due_date", b"_due_date", "_due_position", b"_due_position", "_first_review", b"_first_review", "_fsrs_retrievability", b"_fsrs_retrievability", "_latest_review", b"_latest_review", "_memory_state", b"_memory_state", "due_date", b"due_date", "due_position", b"due_position", "first_review", b"first_review", "fsrs_retrievability", b"fsrs_retrievability", "latest_review", b"latest_review", "memory_state", b"memory_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_due_date", b"_due_date", "_due_position", b"_due_position", "_first_review", b"_first_review", "_fsrs_retrievability", b"_fsrs_retrievability", "_latest_review", b"_latest_review", "_memory_state", b"_memory_state", "added", b"added", "average_secs", b"average_secs", "card_id", b"card_id", "card_type", b"card_type", "custom_data", b"custom_data", "deck", b"deck", "due_date", b"due_date", "due_position", b"due_position", "ease", b"ease", "first_review", b"first_review", "fsrs_retrievability", b"fsrs_retrievability", "interval", b"interval", "lapses", b"lapses", "latest_review", b"latest_review", "memory_state", b"memory_state", "note_id", b"note_id", "notetype", b"notetype", "reviews", b"reviews", "revlog", b"revlog", "total_secs", b"total_secs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_due_date", b"_due_date"]) -> typing_extensions.Literal["due_date"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_due_position", b"_due_position"]) -> typing_extensions.Literal["due_position"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_first_review", b"_first_review"]) -> typing_extensions.Literal["first_review"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fsrs_retrievability", b"_fsrs_retrievability"]) -> typing_extensions.Literal["fsrs_retrievability"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_latest_review", b"_latest_review"]) -> typing_extensions.Literal["latest_review"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory_state", b"_memory_state"]) -> typing_extensions.Literal["memory_state"] | None: ...

global___CardStatsResponse = CardStatsResponse

@typing_extensions.final
class GraphsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEARCH_FIELD_NUMBER: builtins.int
    DAYS_FIELD_NUMBER: builtins.int
    search: builtins.str
    days: builtins.int
    def __init__(
        self,
        *,
        search: builtins.str = ...,
        days: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["days", b"days", "search", b"search"]) -> None: ...

global___GraphsRequest = GraphsRequest

@typing_extensions.final
class GraphsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Added(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class AddedEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            value: builtins.int
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        ADDED_FIELD_NUMBER: builtins.int
        @property
        def added(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
        def __init__(
            self,
            *,
            added: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["added", b"added"]) -> None: ...

    @typing_extensions.final
    class Intervals(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class IntervalsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            value: builtins.int
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        INTERVALS_FIELD_NUMBER: builtins.int
        @property
        def intervals(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
        def __init__(
            self,
            *,
            intervals: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["intervals", b"intervals"]) -> None: ...

    @typing_extensions.final
    class Eases(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class EasesEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            value: builtins.int
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        EASES_FIELD_NUMBER: builtins.int
        @property
        def eases(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
        def __init__(
            self,
            *,
            eases: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["eases", b"eases"]) -> None: ...

    @typing_extensions.final
    class Retrievability(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class RetrievabilityEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            value: builtins.int
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        RETRIEVABILITY_FIELD_NUMBER: builtins.int
        @property
        def retrievability(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
        def __init__(
            self,
            *,
            retrievability: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["retrievability", b"retrievability"]) -> None: ...

    @typing_extensions.final
    class FutureDue(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class FutureDueEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            value: builtins.int
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        FUTURE_DUE_FIELD_NUMBER: builtins.int
        HAVE_BACKLOG_FIELD_NUMBER: builtins.int
        @property
        def future_due(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
        have_backlog: builtins.bool
        def __init__(
            self,
            *,
            future_due: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
            have_backlog: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["future_due", b"future_due", "have_backlog", b"have_backlog"]) -> None: ...

    @typing_extensions.final
    class Today(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ANSWER_COUNT_FIELD_NUMBER: builtins.int
        ANSWER_MILLIS_FIELD_NUMBER: builtins.int
        CORRECT_COUNT_FIELD_NUMBER: builtins.int
        MATURE_CORRECT_FIELD_NUMBER: builtins.int
        MATURE_COUNT_FIELD_NUMBER: builtins.int
        LEARN_COUNT_FIELD_NUMBER: builtins.int
        REVIEW_COUNT_FIELD_NUMBER: builtins.int
        RELEARN_COUNT_FIELD_NUMBER: builtins.int
        EARLY_REVIEW_COUNT_FIELD_NUMBER: builtins.int
        answer_count: builtins.int
        answer_millis: builtins.int
        correct_count: builtins.int
        mature_correct: builtins.int
        mature_count: builtins.int
        learn_count: builtins.int
        review_count: builtins.int
        relearn_count: builtins.int
        early_review_count: builtins.int
        def __init__(
            self,
            *,
            answer_count: builtins.int = ...,
            answer_millis: builtins.int = ...,
            correct_count: builtins.int = ...,
            mature_correct: builtins.int = ...,
            mature_count: builtins.int = ...,
            learn_count: builtins.int = ...,
            review_count: builtins.int = ...,
            relearn_count: builtins.int = ...,
            early_review_count: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["answer_count", b"answer_count", "answer_millis", b"answer_millis", "correct_count", b"correct_count", "early_review_count", b"early_review_count", "learn_count", b"learn_count", "mature_correct", b"mature_correct", "mature_count", b"mature_count", "relearn_count", b"relearn_count", "review_count", b"review_count"]) -> None: ...

    @typing_extensions.final
    class Hours(google.protobuf.message.Message):
        """each bucket is a 24 element vec"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class Hour(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            TOTAL_FIELD_NUMBER: builtins.int
            CORRECT_FIELD_NUMBER: builtins.int
            total: builtins.int
            correct: builtins.int
            def __init__(
                self,
                *,
                total: builtins.int = ...,
                correct: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["correct", b"correct", "total", b"total"]) -> None: ...

        ONE_MONTH_FIELD_NUMBER: builtins.int
        THREE_MONTHS_FIELD_NUMBER: builtins.int
        ONE_YEAR_FIELD_NUMBER: builtins.int
        ALL_TIME_FIELD_NUMBER: builtins.int
        @property
        def one_month(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GraphsResponse.Hours.Hour]: ...
        @property
        def three_months(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GraphsResponse.Hours.Hour]: ...
        @property
        def one_year(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GraphsResponse.Hours.Hour]: ...
        @property
        def all_time(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GraphsResponse.Hours.Hour]: ...
        def __init__(
            self,
            *,
            one_month: collections.abc.Iterable[global___GraphsResponse.Hours.Hour] | None = ...,
            three_months: collections.abc.Iterable[global___GraphsResponse.Hours.Hour] | None = ...,
            one_year: collections.abc.Iterable[global___GraphsResponse.Hours.Hour] | None = ...,
            all_time: collections.abc.Iterable[global___GraphsResponse.Hours.Hour] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["all_time", b"all_time", "one_month", b"one_month", "one_year", b"one_year", "three_months", b"three_months"]) -> None: ...

    @typing_extensions.final
    class ReviewCountsAndTimes(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class Reviews(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            LEARN_FIELD_NUMBER: builtins.int
            RELEARN_FIELD_NUMBER: builtins.int
            YOUNG_FIELD_NUMBER: builtins.int
            MATURE_FIELD_NUMBER: builtins.int
            FILTERED_FIELD_NUMBER: builtins.int
            learn: builtins.int
            relearn: builtins.int
            young: builtins.int
            mature: builtins.int
            filtered: builtins.int
            def __init__(
                self,
                *,
                learn: builtins.int = ...,
                relearn: builtins.int = ...,
                young: builtins.int = ...,
                mature: builtins.int = ...,
                filtered: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["filtered", b"filtered", "learn", b"learn", "mature", b"mature", "relearn", b"relearn", "young", b"young"]) -> None: ...

        @typing_extensions.final
        class CountEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            @property
            def value(self) -> global___GraphsResponse.ReviewCountsAndTimes.Reviews: ...
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: global___GraphsResponse.ReviewCountsAndTimes.Reviews | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        @typing_extensions.final
        class TimeEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.int
            @property
            def value(self) -> global___GraphsResponse.ReviewCountsAndTimes.Reviews: ...
            def __init__(
                self,
                *,
                key: builtins.int = ...,
                value: global___GraphsResponse.ReviewCountsAndTimes.Reviews | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

        COUNT_FIELD_NUMBER: builtins.int
        TIME_FIELD_NUMBER: builtins.int
        @property
        def count(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___GraphsResponse.ReviewCountsAndTimes.Reviews]: ...
        @property
        def time(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___GraphsResponse.ReviewCountsAndTimes.Reviews]: ...
        def __init__(
            self,
            *,
            count: collections.abc.Mapping[builtins.int, global___GraphsResponse.ReviewCountsAndTimes.Reviews] | None = ...,
            time: collections.abc.Mapping[builtins.int, global___GraphsResponse.ReviewCountsAndTimes.Reviews] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["count", b"count", "time", b"time"]) -> None: ...

    @typing_extensions.final
    class Buttons(google.protobuf.message.Message):
        """4 element vecs for buttons 1-4"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class ButtonCounts(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            LEARNING_FIELD_NUMBER: builtins.int
            YOUNG_FIELD_NUMBER: builtins.int
            MATURE_FIELD_NUMBER: builtins.int
            @property
            def learning(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
            @property
            def young(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
            @property
            def mature(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
            def __init__(
                self,
                *,
                learning: collections.abc.Iterable[builtins.int] | None = ...,
                young: collections.abc.Iterable[builtins.int] | None = ...,
                mature: collections.abc.Iterable[builtins.int] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["learning", b"learning", "mature", b"mature", "young", b"young"]) -> None: ...

        ONE_MONTH_FIELD_NUMBER: builtins.int
        THREE_MONTHS_FIELD_NUMBER: builtins.int
        ONE_YEAR_FIELD_NUMBER: builtins.int
        ALL_TIME_FIELD_NUMBER: builtins.int
        @property
        def one_month(self) -> global___GraphsResponse.Buttons.ButtonCounts: ...
        @property
        def three_months(self) -> global___GraphsResponse.Buttons.ButtonCounts: ...
        @property
        def one_year(self) -> global___GraphsResponse.Buttons.ButtonCounts: ...
        @property
        def all_time(self) -> global___GraphsResponse.Buttons.ButtonCounts: ...
        def __init__(
            self,
            *,
            one_month: global___GraphsResponse.Buttons.ButtonCounts | None = ...,
            three_months: global___GraphsResponse.Buttons.ButtonCounts | None = ...,
            one_year: global___GraphsResponse.Buttons.ButtonCounts | None = ...,
            all_time: global___GraphsResponse.Buttons.ButtonCounts | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["all_time", b"all_time", "one_month", b"one_month", "one_year", b"one_year", "three_months", b"three_months"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["all_time", b"all_time", "one_month", b"one_month", "one_year", b"one_year", "three_months", b"three_months"]) -> None: ...

    @typing_extensions.final
    class CardCounts(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class Counts(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            NEWCARDS_FIELD_NUMBER: builtins.int
            LEARN_FIELD_NUMBER: builtins.int
            RELEARN_FIELD_NUMBER: builtins.int
            YOUNG_FIELD_NUMBER: builtins.int
            MATURE_FIELD_NUMBER: builtins.int
            SUSPENDED_FIELD_NUMBER: builtins.int
            BURIED_FIELD_NUMBER: builtins.int
            newCards: builtins.int
            learn: builtins.int
            relearn: builtins.int
            young: builtins.int
            mature: builtins.int
            suspended: builtins.int
            buried: builtins.int
            def __init__(
                self,
                *,
                newCards: builtins.int = ...,
                learn: builtins.int = ...,
                relearn: builtins.int = ...,
                young: builtins.int = ...,
                mature: builtins.int = ...,
                suspended: builtins.int = ...,
                buried: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["buried", b"buried", "learn", b"learn", "mature", b"mature", "newCards", b"newCards", "relearn", b"relearn", "suspended", b"suspended", "young", b"young"]) -> None: ...

        INCLUDING_INACTIVE_FIELD_NUMBER: builtins.int
        EXCLUDING_INACTIVE_FIELD_NUMBER: builtins.int
        @property
        def including_inactive(self) -> global___GraphsResponse.CardCounts.Counts:
            """Buried/suspended cards are included in counts; suspended/buried counts
            are 0.
            """
        @property
        def excluding_inactive(self) -> global___GraphsResponse.CardCounts.Counts:
            """Buried/suspended cards are counted separately."""
        def __init__(
            self,
            *,
            including_inactive: global___GraphsResponse.CardCounts.Counts | None = ...,
            excluding_inactive: global___GraphsResponse.CardCounts.Counts | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["excluding_inactive", b"excluding_inactive", "including_inactive", b"including_inactive"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["excluding_inactive", b"excluding_inactive", "including_inactive", b"including_inactive"]) -> None: ...

    BUTTONS_FIELD_NUMBER: builtins.int
    CARD_COUNTS_FIELD_NUMBER: builtins.int
    HOURS_FIELD_NUMBER: builtins.int
    TODAY_FIELD_NUMBER: builtins.int
    EASES_FIELD_NUMBER: builtins.int
    DIFFICULTY_FIELD_NUMBER: builtins.int
    INTERVALS_FIELD_NUMBER: builtins.int
    FUTURE_DUE_FIELD_NUMBER: builtins.int
    ADDED_FIELD_NUMBER: builtins.int
    REVIEWS_FIELD_NUMBER: builtins.int
    ROLLOVER_HOUR_FIELD_NUMBER: builtins.int
    RETRIEVABILITY_FIELD_NUMBER: builtins.int
    FSRS_FIELD_NUMBER: builtins.int
    STABILITY_FIELD_NUMBER: builtins.int
    @property
    def buttons(self) -> global___GraphsResponse.Buttons: ...
    @property
    def card_counts(self) -> global___GraphsResponse.CardCounts: ...
    @property
    def hours(self) -> global___GraphsResponse.Hours: ...
    @property
    def today(self) -> global___GraphsResponse.Today: ...
    @property
    def eases(self) -> global___GraphsResponse.Eases: ...
    @property
    def difficulty(self) -> global___GraphsResponse.Eases: ...
    @property
    def intervals(self) -> global___GraphsResponse.Intervals: ...
    @property
    def future_due(self) -> global___GraphsResponse.FutureDue: ...
    @property
    def added(self) -> global___GraphsResponse.Added: ...
    @property
    def reviews(self) -> global___GraphsResponse.ReviewCountsAndTimes: ...
    rollover_hour: builtins.int
    @property
    def retrievability(self) -> global___GraphsResponse.Retrievability: ...
    fsrs: builtins.bool
    @property
    def stability(self) -> global___GraphsResponse.Intervals: ...
    def __init__(
        self,
        *,
        buttons: global___GraphsResponse.Buttons | None = ...,
        card_counts: global___GraphsResponse.CardCounts | None = ...,
        hours: global___GraphsResponse.Hours | None = ...,
        today: global___GraphsResponse.Today | None = ...,
        eases: global___GraphsResponse.Eases | None = ...,
        difficulty: global___GraphsResponse.Eases | None = ...,
        intervals: global___GraphsResponse.Intervals | None = ...,
        future_due: global___GraphsResponse.FutureDue | None = ...,
        added: global___GraphsResponse.Added | None = ...,
        reviews: global___GraphsResponse.ReviewCountsAndTimes | None = ...,
        rollover_hour: builtins.int = ...,
        retrievability: global___GraphsResponse.Retrievability | None = ...,
        fsrs: builtins.bool = ...,
        stability: global___GraphsResponse.Intervals | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["added", b"added", "buttons", b"buttons", "card_counts", b"card_counts", "difficulty", b"difficulty", "eases", b"eases", "future_due", b"future_due", "hours", b"hours", "intervals", b"intervals", "retrievability", b"retrievability", "reviews", b"reviews", "stability", b"stability", "today", b"today"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["added", b"added", "buttons", b"buttons", "card_counts", b"card_counts", "difficulty", b"difficulty", "eases", b"eases", "fsrs", b"fsrs", "future_due", b"future_due", "hours", b"hours", "intervals", b"intervals", "retrievability", b"retrievability", "reviews", b"reviews", "rollover_hour", b"rollover_hour", "stability", b"stability", "today", b"today"]) -> None: ...

global___GraphsResponse = GraphsResponse

@typing_extensions.final
class GraphPreferences(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Weekday:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _WeekdayEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GraphPreferences._Weekday.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SUNDAY: GraphPreferences._Weekday.ValueType  # 0
        MONDAY: GraphPreferences._Weekday.ValueType  # 1
        FRIDAY: GraphPreferences._Weekday.ValueType  # 5
        SATURDAY: GraphPreferences._Weekday.ValueType  # 6

    class Weekday(_Weekday, metaclass=_WeekdayEnumTypeWrapper): ...
    SUNDAY: GraphPreferences.Weekday.ValueType  # 0
    MONDAY: GraphPreferences.Weekday.ValueType  # 1
    FRIDAY: GraphPreferences.Weekday.ValueType  # 5
    SATURDAY: GraphPreferences.Weekday.ValueType  # 6

    CALENDAR_FIRST_DAY_OF_WEEK_FIELD_NUMBER: builtins.int
    CARD_COUNTS_SEPARATE_INACTIVE_FIELD_NUMBER: builtins.int
    BROWSER_LINKS_SUPPORTED_FIELD_NUMBER: builtins.int
    FUTURE_DUE_SHOW_BACKLOG_FIELD_NUMBER: builtins.int
    calendar_first_day_of_week: global___GraphPreferences.Weekday.ValueType
    card_counts_separate_inactive: builtins.bool
    browser_links_supported: builtins.bool
    future_due_show_backlog: builtins.bool
    def __init__(
        self,
        *,
        calendar_first_day_of_week: global___GraphPreferences.Weekday.ValueType = ...,
        card_counts_separate_inactive: builtins.bool = ...,
        browser_links_supported: builtins.bool = ...,
        future_due_show_backlog: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["browser_links_supported", b"browser_links_supported", "calendar_first_day_of_week", b"calendar_first_day_of_week", "card_counts_separate_inactive", b"card_counts_separate_inactive", "future_due_show_backlog", b"future_due_show_backlog"]) -> None: ...

global___GraphPreferences = GraphPreferences

@typing_extensions.final
class RevlogEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ReviewKind:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ReviewKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RevlogEntry._ReviewKind.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEARNING: RevlogEntry._ReviewKind.ValueType  # 0
        REVIEW: RevlogEntry._ReviewKind.ValueType  # 1
        RELEARNING: RevlogEntry._ReviewKind.ValueType  # 2
        FILTERED: RevlogEntry._ReviewKind.ValueType  # 3
        MANUAL: RevlogEntry._ReviewKind.ValueType  # 4

    class ReviewKind(_ReviewKind, metaclass=_ReviewKindEnumTypeWrapper): ...
    LEARNING: RevlogEntry.ReviewKind.ValueType  # 0
    REVIEW: RevlogEntry.ReviewKind.ValueType  # 1
    RELEARNING: RevlogEntry.ReviewKind.ValueType  # 2
    FILTERED: RevlogEntry.ReviewKind.ValueType  # 3
    MANUAL: RevlogEntry.ReviewKind.ValueType  # 4

    ID_FIELD_NUMBER: builtins.int
    CID_FIELD_NUMBER: builtins.int
    USN_FIELD_NUMBER: builtins.int
    BUTTON_CHOSEN_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    LAST_INTERVAL_FIELD_NUMBER: builtins.int
    EASE_FACTOR_FIELD_NUMBER: builtins.int
    TAKEN_MILLIS_FIELD_NUMBER: builtins.int
    REVIEW_KIND_FIELD_NUMBER: builtins.int
    id: builtins.int
    cid: builtins.int
    usn: builtins.int
    button_chosen: builtins.int
    interval: builtins.int
    last_interval: builtins.int
    ease_factor: builtins.int
    taken_millis: builtins.int
    review_kind: global___RevlogEntry.ReviewKind.ValueType
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        cid: builtins.int = ...,
        usn: builtins.int = ...,
        button_chosen: builtins.int = ...,
        interval: builtins.int = ...,
        last_interval: builtins.int = ...,
        ease_factor: builtins.int = ...,
        taken_millis: builtins.int = ...,
        review_kind: global___RevlogEntry.ReviewKind.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["button_chosen", b"button_chosen", "cid", b"cid", "ease_factor", b"ease_factor", "id", b"id", "interval", b"interval", "last_interval", b"last_interval", "review_kind", b"review_kind", "taken_millis", b"taken_millis", "usn", b"usn"]) -> None: ...

global___RevlogEntry = RevlogEntry

@typing_extensions.final
class RevlogEntries(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENTRIES_FIELD_NUMBER: builtins.int
    NEXT_DAY_AT_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RevlogEntry]: ...
    next_day_at: builtins.int
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___RevlogEntry] | None = ...,
        next_day_at: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries", "next_day_at", b"next_day_at"]) -> None: ...

global___RevlogEntries = RevlogEntries
