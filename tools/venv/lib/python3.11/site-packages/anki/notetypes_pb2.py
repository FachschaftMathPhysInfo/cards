# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/notetypes.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x61nki/notetypes.proto\x12\x0e\x61nki.notetypes\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\"\x1a\n\nNotetypeId\x12\x0c\n\x04ntid\x18\x01 \x01(\x03\"\xa1\x0c\n\x08Notetype\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nmtime_secs\x18\x03 \x01(\x03\x12\x0b\n\x03usn\x18\x04 \x01(\x11\x12/\n\x06\x63onfig\x18\x07 \x01(\x0b\x32\x1f.anki.notetypes.Notetype.Config\x12.\n\x06\x66ields\x18\x08 \x03(\x0b\x32\x1e.anki.notetypes.Notetype.Field\x12\x34\n\ttemplates\x18\t \x03(\x0b\x32!.anki.notetypes.Notetype.Template\x1a\xdb\x04\n\x06\x43onfig\x12\x32\n\x04kind\x18\x01 \x01(\x0e\x32$.anki.notetypes.Notetype.Config.Kind\x12\x16\n\x0esort_field_idx\x18\x02 \x01(\r\x12\x0b\n\x03\x63ss\x18\x03 \x01(\t\x12\x1d\n\x15target_deck_id_unused\x18\x04 \x01(\x03\x12\x11\n\tlatex_pre\x18\x05 \x01(\t\x12\x12\n\nlatex_post\x18\x06 \x01(\t\x12\x11\n\tlatex_svg\x18\x07 \x01(\x08\x12=\n\x04reqs\x18\x08 \x03(\x0b\x32/.anki.notetypes.Notetype.Config.CardRequirement\x12L\n\x13original_stock_kind\x18\t \x01(\x0e\x32/.anki.notetypes.StockNotetype.OriginalStockKind\x12\x18\n\x0boriginal_id\x18\n \x01(\x03H\x00\x88\x01\x01\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\x1a\xae\x01\n\x0f\x43\x61rdRequirement\x12\x10\n\x08\x63\x61rd_ord\x18\x01 \x01(\r\x12\x42\n\x04kind\x18\x02 \x01(\x0e\x32\x34.anki.notetypes.Notetype.Config.CardRequirement.Kind\x12\x12\n\nfield_ords\x18\x03 \x03(\r\"1\n\x04Kind\x12\r\n\tKIND_NONE\x10\x00\x12\x0c\n\x08KIND_ANY\x10\x01\x12\x0c\n\x08KIND_ALL\x10\x02\"\'\n\x04Kind\x12\x0f\n\x0bKIND_NORMAL\x10\x00\x12\x0e\n\nKIND_CLOZE\x10\x01\x42\x0e\n\x0c_original_id\x1a\xf2\x02\n\x05\x46ield\x12!\n\x03ord\x18\x01 \x01(\x0b\x32\x14.anki.generic.UInt32\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x35\n\x06\x63onfig\x18\x05 \x01(\x0b\x32%.anki.notetypes.Notetype.Field.Config\x1a\x80\x02\n\x06\x43onfig\x12\x0e\n\x06sticky\x18\x01 \x01(\x08\x12\x0b\n\x03rtl\x18\x02 \x01(\x08\x12\x11\n\tfont_name\x18\x03 \x01(\t\x12\x11\n\tfont_size\x18\x04 \x01(\r\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x12\n\nplain_text\x18\x06 \x01(\x08\x12\x11\n\tcollapsed\x18\x07 \x01(\x08\x12\x1b\n\x13\x65xclude_from_search\x18\x08 \x01(\x08\x12\x0f\n\x02id\x18\t \x01(\x03H\x00\x88\x01\x01\x12\x10\n\x03tag\x18\n \x01(\rH\x01\x88\x01\x01\x12\x18\n\x10prevent_deletion\x18\x0b \x01(\x08\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\x42\x05\n\x03_idB\x06\n\x04_tag\x1a\xef\x02\n\x08Template\x12!\n\x03ord\x18\x01 \x01(\x0b\x32\x14.anki.generic.UInt32\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nmtime_secs\x18\x03 \x01(\x03\x12\x0b\n\x03usn\x18\x04 \x01(\x11\x12\x38\n\x06\x63onfig\x18\x05 \x01(\x0b\x32(.anki.notetypes.Notetype.Template.Config\x1a\xd6\x01\n\x06\x43onfig\x12\x10\n\x08q_format\x18\x01 \x01(\t\x12\x10\n\x08\x61_format\x18\x02 \x01(\t\x12\x18\n\x10q_format_browser\x18\x03 \x01(\t\x12\x18\n\x10\x61_format_browser\x18\x04 \x01(\t\x12\x16\n\x0etarget_deck_id\x18\x05 \x01(\x03\x12\x19\n\x11\x62rowser_font_name\x18\x06 \x01(\t\x12\x19\n\x11\x62rowser_font_size\x18\x07 \x01(\r\x12\x0f\n\x02id\x18\x08 \x01(\x03H\x00\x88\x01\x01\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\x42\x05\n\x03_id\"_\n\x1a\x41\x64\x64OrUpdateNotetypeRequest\x12\x0c\n\x04json\x18\x01 \x01(\x0c\x12\x1e\n\x16preserve_usn_and_mtime\x18\x02 \x01(\x08\x12\x13\n\x0bskip_checks\x18\x03 \x01(\x08\"@\n\x1bUpdateNotetypeLegacyRequest\x12\x0c\n\x04json\x18\x01 \x01(\x0c\x12\x13\n\x0bskip_checks\x18\x02 \x01(\x08\"\xfb\x03\n\rStockNotetype\x12\x30\n\x04kind\x18\x01 \x01(\x0e\x32\".anki.notetypes.StockNotetype.Kind\"\x96\x01\n\x04Kind\x12\x0e\n\nKIND_BASIC\x10\x00\x12\x1b\n\x17KIND_BASIC_AND_REVERSED\x10\x01\x12 \n\x1cKIND_BASIC_OPTIONAL_REVERSED\x10\x02\x12\x15\n\x11KIND_BASIC_TYPING\x10\x03\x12\x0e\n\nKIND_CLOZE\x10\x04\x12\x18\n\x14KIND_IMAGE_OCCLUSION\x10\x05\"\x9e\x02\n\x11OriginalStockKind\x12\x1f\n\x1bORIGINAL_STOCK_KIND_UNKNOWN\x10\x00\x12\x1d\n\x19ORIGINAL_STOCK_KIND_BASIC\x10\x01\x12*\n&ORIGINAL_STOCK_KIND_BASIC_AND_REVERSED\x10\x02\x12/\n+ORIGINAL_STOCK_KIND_BASIC_OPTIONAL_REVERSED\x10\x03\x12$\n ORIGINAL_STOCK_KIND_BASIC_TYPING\x10\x04\x12\x1d\n\x19ORIGINAL_STOCK_KIND_CLOZE\x10\x05\x12\'\n#ORIGINAL_STOCK_KIND_IMAGE_OCCLUSION\x10\x06\"@\n\rNotetypeNames\x12/\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1e.anki.notetypes.NotetypeNameId\"L\n\x11NotetypeUseCounts\x12\x37\n\x07\x65ntries\x18\x01 \x03(\x0b\x32&.anki.notetypes.NotetypeNameIdUseCount\"*\n\x0eNotetypeNameId\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"E\n\x16NotetypeNameIdUseCount\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tuse_count\x18\x03 \x01(\r\"1\n\x16GetAuxConfigKeyRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0b\n\x03key\x18\x02 \x01(\t\"X\n\x1eGetAuxTemplateConfigKeyRequest\x12\x13\n\x0bnotetype_id\x18\x01 \x01(\x03\x12\x14\n\x0c\x63\x61rd_ordinal\x18\x02 \x01(\r\x12\x0b\n\x03key\x18\x03 \x01(\t\"P\n\x1cGetChangeNotetypeInfoRequest\x12\x17\n\x0fold_notetype_id\x18\x01 \x01(\x03\x12\x17\n\x0fnew_notetype_id\x18\x02 \x01(\x03\"\xcb\x01\n\x15\x43hangeNotetypeRequest\x12\x10\n\x08note_ids\x18\x01 \x03(\x03\x12\x12\n\nnew_fields\x18\x02 \x03(\x05\x12\x15\n\rnew_templates\x18\x03 \x03(\x05\x12\x17\n\x0fold_notetype_id\x18\x04 \x01(\x03\x12\x17\n\x0fnew_notetype_id\x18\x05 \x01(\x03\x12\x16\n\x0e\x63urrent_schema\x18\x06 \x01(\x03\x12\x19\n\x11old_notetype_name\x18\x07 \x01(\t\x12\x10\n\x08is_cloze\x18\x08 \x01(\x08\"\xcf\x01\n\x12\x43hangeNotetypeInfo\x12\x17\n\x0fold_field_names\x18\x01 \x03(\t\x12\x1a\n\x12old_template_names\x18\x02 \x03(\t\x12\x17\n\x0fnew_field_names\x18\x03 \x03(\t\x12\x1a\n\x12new_template_names\x18\x04 \x03(\t\x12\x34\n\x05input\x18\x05 \x01(\x0b\x32%.anki.notetypes.ChangeNotetypeRequest\x12\x19\n\x11old_notetype_name\x18\x06 \x01(\t\"\x9c\x01\n\x1dRestoreNotetypeToStockRequest\x12/\n\x0bnotetype_id\x18\x01 \x01(\x0b\x32\x1a.anki.notetypes.NotetypeId\x12;\n\nforce_kind\x18\x02 \x01(\x0e\x32\".anki.notetypes.StockNotetype.KindH\x00\x88\x01\x01\x42\r\n\x0b_force_kind*\xc8\x01\n\x13ImageOcclusionField\x12$\n IMAGE_OCCLUSION_FIELD_OCCLUSIONS\x10\x00\x12\x1f\n\x1bIMAGE_OCCLUSION_FIELD_IMAGE\x10\x01\x12 \n\x1cIMAGE_OCCLUSION_FIELD_HEADER\x10\x02\x12$\n IMAGE_OCCLUSION_FIELD_BACK_EXTRA\x10\x03\x12\"\n\x1eIMAGE_OCCLUSION_FIELD_COMMENTS\x10\x04*>\n\nClozeField\x12\x14\n\x10\x43LOZE_FIELD_TEXT\x10\x00\x12\x1a\n\x16\x43LOZE_FIELD_BACK_EXTRA\x10\x01\x32\xdd\x0b\n\x10NotetypesService\x12I\n\x0b\x41\x64\x64Notetype\x12\x18.anki.notetypes.Notetype\x1a .anki.collection.OpChangesWithId\x12\x46\n\x0eUpdateNotetype\x12\x18.anki.notetypes.Notetype\x1a\x1a.anki.collection.OpChanges\x12I\n\x11\x41\x64\x64NotetypeLegacy\x12\x12.anki.generic.Json\x1a .anki.collection.OpChangesWithId\x12_\n\x14UpdateNotetypeLegacy\x12+.anki.notetypes.UpdateNotetypeLegacyRequest\x1a\x1a.anki.collection.OpChanges\x12]\n\x13\x41\x64\x64OrUpdateNotetype\x12*.anki.notetypes.AddOrUpdateNotetypeRequest\x1a\x1a.anki.notetypes.NotetypeId\x12K\n\x16GetStockNotetypeLegacy\x12\x1d.anki.notetypes.StockNotetype\x1a\x12.anki.generic.Json\x12\x43\n\x0bGetNotetype\x12\x1a.anki.notetypes.NotetypeId\x1a\x18.anki.notetypes.Notetype\x12\x43\n\x11GetNotetypeLegacy\x12\x1a.anki.notetypes.NotetypeId\x1a\x12.anki.generic.Json\x12\x46\n\x10GetNotetypeNames\x12\x13.anki.generic.Empty\x1a\x1d.anki.notetypes.NotetypeNames\x12S\n\x19GetNotetypeNamesAndCounts\x12\x13.anki.generic.Empty\x1a!.anki.notetypes.NotetypeUseCounts\x12G\n\x13GetNotetypeIdByName\x12\x14.anki.generic.String\x1a\x1a.anki.notetypes.NotetypeId\x12H\n\x0eRemoveNotetype\x12\x1a.anki.notetypes.NotetypeId\x1a\x1a.anki.collection.OpChanges\x12W\n\x17GetAuxNotetypeConfigKey\x12&.anki.notetypes.GetAuxConfigKeyRequest\x1a\x14.anki.generic.String\x12_\n\x17GetAuxTemplateConfigKey\x12..anki.notetypes.GetAuxTemplateConfigKeyRequest\x1a\x14.anki.generic.String\x12i\n\x15GetChangeNotetypeInfo\x12,.anki.notetypes.GetChangeNotetypeInfoRequest\x1a\".anki.notetypes.ChangeNotetypeInfo\x12S\n\x0e\x43hangeNotetype\x12%.anki.notetypes.ChangeNotetypeRequest\x1a\x1a.anki.collection.OpChanges\x12\x45\n\rGetFieldNames\x12\x1a.anki.notetypes.NotetypeId\x1a\x18.anki.generic.StringList\x12\x63\n\x16RestoreNotetypeToStock\x12-.anki.notetypes.RestoreNotetypeToStockRequest\x1a\x1a.anki.collection.OpChanges2\x19\n\x17\x42\x61\x63kendNotetypesServiceB\x02P\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'anki.notetypes_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _IMAGEOCCLUSIONFIELD._serialized_start=3414
  _IMAGEOCCLUSIONFIELD._serialized_end=3614
  _CLOZEFIELD._serialized_start=3616
  _CLOZEFIELD._serialized_end=3678
  _NOTETYPEID._serialized_start=83
  _NOTETYPEID._serialized_end=109
  _NOTETYPE._serialized_start=112
  _NOTETYPE._serialized_end=1681
  _NOTETYPE_CONFIG._serialized_start=335
  _NOTETYPE_CONFIG._serialized_end=938
  _NOTETYPE_CONFIG_CARDREQUIREMENT._serialized_start=707
  _NOTETYPE_CONFIG_CARDREQUIREMENT._serialized_end=881
  _NOTETYPE_CONFIG_CARDREQUIREMENT_KIND._serialized_start=832
  _NOTETYPE_CONFIG_CARDREQUIREMENT_KIND._serialized_end=881
  _NOTETYPE_CONFIG_KIND._serialized_start=883
  _NOTETYPE_CONFIG_KIND._serialized_end=922
  _NOTETYPE_FIELD._serialized_start=941
  _NOTETYPE_FIELD._serialized_end=1311
  _NOTETYPE_FIELD_CONFIG._serialized_start=1055
  _NOTETYPE_FIELD_CONFIG._serialized_end=1311
  _NOTETYPE_TEMPLATE._serialized_start=1314
  _NOTETYPE_TEMPLATE._serialized_end=1681
  _NOTETYPE_TEMPLATE_CONFIG._serialized_start=1467
  _NOTETYPE_TEMPLATE_CONFIG._serialized_end=1681
  _ADDORUPDATENOTETYPEREQUEST._serialized_start=1683
  _ADDORUPDATENOTETYPEREQUEST._serialized_end=1778
  _UPDATENOTETYPELEGACYREQUEST._serialized_start=1780
  _UPDATENOTETYPELEGACYREQUEST._serialized_end=1844
  _STOCKNOTETYPE._serialized_start=1847
  _STOCKNOTETYPE._serialized_end=2354
  _STOCKNOTETYPE_KIND._serialized_start=1915
  _STOCKNOTETYPE_KIND._serialized_end=2065
  _STOCKNOTETYPE_ORIGINALSTOCKKIND._serialized_start=2068
  _STOCKNOTETYPE_ORIGINALSTOCKKIND._serialized_end=2354
  _NOTETYPENAMES._serialized_start=2356
  _NOTETYPENAMES._serialized_end=2420
  _NOTETYPEUSECOUNTS._serialized_start=2422
  _NOTETYPEUSECOUNTS._serialized_end=2498
  _NOTETYPENAMEID._serialized_start=2500
  _NOTETYPENAMEID._serialized_end=2542
  _NOTETYPENAMEIDUSECOUNT._serialized_start=2544
  _NOTETYPENAMEIDUSECOUNT._serialized_end=2613
  _GETAUXCONFIGKEYREQUEST._serialized_start=2615
  _GETAUXCONFIGKEYREQUEST._serialized_end=2664
  _GETAUXTEMPLATECONFIGKEYREQUEST._serialized_start=2666
  _GETAUXTEMPLATECONFIGKEYREQUEST._serialized_end=2754
  _GETCHANGENOTETYPEINFOREQUEST._serialized_start=2756
  _GETCHANGENOTETYPEINFOREQUEST._serialized_end=2836
  _CHANGENOTETYPEREQUEST._serialized_start=2839
  _CHANGENOTETYPEREQUEST._serialized_end=3042
  _CHANGENOTETYPEINFO._serialized_start=3045
  _CHANGENOTETYPEINFO._serialized_end=3252
  _RESTORENOTETYPETOSTOCKREQUEST._serialized_start=3255
  _RESTORENOTETYPETOSTOCKREQUEST._serialized_end=3411
  _NOTETYPESSERVICE._serialized_start=3681
  _NOTETYPESSERVICE._serialized_end=5182
  _BACKENDNOTETYPESSERVICE._serialized_start=5184
  _BACKENDNOTETYPESSERVICE._serialized_end=5209
# @@protoc_insertion_point(module_scope)
