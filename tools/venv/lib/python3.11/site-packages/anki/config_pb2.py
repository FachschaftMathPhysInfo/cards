# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/config.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x61nki/config.proto\x12\x0b\x61nki.config\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\"\xed\x05\n\tConfigKey\"\xf6\x04\n\x04\x42ool\x12!\n\x1d\x42ROWSER_TABLE_SHOW_NOTES_MODE\x10\x00\x12\x16\n\x12PREVIEW_BOTH_SIDES\x10\x03\x12\x11\n\rCOLLAPSE_TAGS\x10\x04\x12\x16\n\x12\x43OLLAPSE_NOTETYPES\x10\x05\x12\x12\n\x0e\x43OLLAPSE_DECKS\x10\x06\x12\x1b\n\x17\x43OLLAPSE_SAVED_SEARCHES\x10\x07\x12\x12\n\x0e\x43OLLAPSE_TODAY\x10\x08\x12\x17\n\x13\x43OLLAPSE_CARD_STATE\x10\t\x12\x12\n\x0e\x43OLLAPSE_FLAGS\x10\n\x12\x0e\n\nSCHED_2021\x10\x0b\x12#\n\x1f\x41\x44\x44ING_DEFAULTS_TO_CURRENT_DECK\x10\x0c\x12\x1b\n\x17HIDE_AUDIO_PLAY_BUTTONS\x10\r\x12\"\n\x1eINTERRUPT_AUDIO_WHEN_ANSWERING\x10\x0e\x12\x17\n\x13PASTE_IMAGES_AS_PNG\x10\x0f\x12\x1b\n\x17PASTE_STRIPS_FORMATTING\x10\x10\x12\x17\n\x13NORMALIZE_NOTE_TEXT\x10\x11\x12\x1c\n\x18IGNORE_ACCENTS_IN_SEARCH\x10\x12\x12\x1c\n\x18RESTORE_POSITION_BROWSER\x10\x13\x12\x1d\n\x19RESTORE_POSITION_REVIEWER\x10\x14\x12\x18\n\x14RESET_COUNTS_BROWSER\x10\x15\x12\x19\n\x15RESET_COUNTS_REVIEWER\x10\x16\x12\x1b\n\x17RANDOM_ORDER_REPOSITION\x10\x17\x12$\n SHIFT_POSITION_OF_EXISTING_CARDS\x10\x18\"g\n\x06String\x12\x13\n\x0fSET_DUE_BROWSER\x10\x00\x12\x14\n\x10SET_DUE_REVIEWER\x10\x01\x12\x17\n\x13\x44\x45\x46\x41ULT_SEARCH_TEXT\x10\x02\x12\x19\n\x15\x43\x41RD_STATE_CUSTOMIZER\x10\x03\"@\n\x14GetConfigBoolRequest\x12(\n\x03key\x18\x01 \x01(\x0e\x32\x1b.anki.config.ConfigKey.Bool\"a\n\x14SetConfigBoolRequest\x12(\n\x03key\x18\x01 \x01(\x0e\x32\x1b.anki.config.ConfigKey.Bool\x12\r\n\x05value\x18\x02 \x01(\x08\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"D\n\x16GetConfigStringRequest\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\"e\n\x16SetConfigStringRequest\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\x12\r\n\x05value\x18\x02 \x01(\t\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"E\n\x17OptionalStringConfigKey\x12*\n\x03key\x18\x01 \x01(\x0e\x32\x1d.anki.config.ConfigKey.String\"I\n\x14SetConfigJsonRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x12\n\nvalue_json\x18\x02 \x01(\x0c\x12\x10\n\x08undoable\x18\x03 \x01(\x08\"\xa5\x07\n\x0bPreferences\x12\x37\n\nscheduling\x18\x01 \x01(\x0b\x32#.anki.config.Preferences.Scheduling\x12\x35\n\treviewing\x18\x02 \x01(\x0b\x32\".anki.config.Preferences.Reviewing\x12\x31\n\x07\x65\x64iting\x18\x03 \x01(\x0b\x32 .anki.config.Preferences.Editing\x12\x36\n\x07\x62\x61\x63kups\x18\x04 \x01(\x0b\x32%.anki.config.Preferences.BackupLimits\x1a\xf3\x01\n\nScheduling\x12\x10\n\x08rollover\x18\x02 \x01(\r\x12\x18\n\x10learn_ahead_secs\x18\x03 \x01(\r\x12H\n\x0enew_review_mix\x18\x04 \x01(\x0e\x32\x30.anki.config.Preferences.Scheduling.NewReviewMix\x12\x14\n\x0cnew_timezone\x18\x05 \x01(\x08\x12\x17\n\x0f\x64\x61y_learn_first\x18\x06 \x01(\x08\"@\n\x0cNewReviewMix\x12\x0e\n\nDISTRIBUTE\x10\x00\x12\x11\n\rREVIEWS_FIRST\x10\x01\x12\r\n\tNEW_FIRST\x10\x02\x1a\xb3\x01\n\tReviewing\x12\x1f\n\x17hide_audio_play_buttons\x18\x01 \x01(\x08\x12&\n\x1einterrupt_audio_when_answering\x18\x02 \x01(\x08\x12!\n\x19show_remaining_due_counts\x18\x03 \x01(\x08\x12!\n\x19show_intervals_on_buttons\x18\x04 \x01(\x08\x12\x17\n\x0ftime_limit_secs\x18\x05 \x01(\r\x1a\xaf\x01\n\x07\x45\x64iting\x12\'\n\x1f\x61\x64\x64ing_defaults_to_current_deck\x18\x01 \x01(\x08\x12\x1b\n\x13paste_images_as_png\x18\x02 \x01(\x08\x12\x1f\n\x17paste_strips_formatting\x18\x03 \x01(\x08\x12\x1b\n\x13\x64\x65\x66\x61ult_search_text\x18\x04 \x01(\t\x12 \n\x18ignore_accents_in_search\x18\x05 \x01(\x08\x1a]\n\x0c\x42\x61\x63kupLimits\x12\r\n\x05\x64\x61ily\x18\x01 \x01(\r\x12\x0e\n\x06weekly\x18\x02 \x01(\r\x12\x0f\n\x07monthly\x18\x03 \x01(\r\x12\x1d\n\x15minimum_interval_mins\x18\x04 \x01(\r2\xa7\x06\n\rConfigService\x12\x39\n\rGetConfigJson\x12\x14.anki.generic.String\x1a\x12.anki.generic.Json\x12N\n\rSetConfigJson\x12!.anki.config.SetConfigJsonRequest\x1a\x1a.anki.collection.OpChanges\x12M\n\x13SetConfigJsonNoUndo\x12!.anki.config.SetConfigJsonRequest\x1a\x13.anki.generic.Empty\x12@\n\x0cRemoveConfig\x12\x14.anki.generic.String\x1a\x1a.anki.collection.OpChanges\x12\x37\n\x0cGetAllConfig\x12\x13.anki.generic.Empty\x1a\x12.anki.generic.Json\x12\x46\n\rGetConfigBool\x12!.anki.config.GetConfigBoolRequest\x1a\x12.anki.generic.Bool\x12N\n\rSetConfigBool\x12!.anki.config.SetConfigBoolRequest\x1a\x1a.anki.collection.OpChanges\x12L\n\x0fGetConfigString\x12#.anki.config.GetConfigStringRequest\x1a\x14.anki.generic.String\x12R\n\x0fSetConfigString\x12#.anki.config.SetConfigStringRequest\x1a\x1a.anki.collection.OpChanges\x12?\n\x0eGetPreferences\x12\x13.anki.generic.Empty\x1a\x18.anki.config.Preferences\x12\x46\n\x0eSetPreferences\x12\x18.anki.config.Preferences\x1a\x1a.anki.collection.OpChanges2\x16\n\x14\x42\x61\x63kendConfigServiceB\x02P\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'anki.config_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _CONFIGKEY._serialized_start=78
  _CONFIGKEY._serialized_end=827
  _CONFIGKEY_BOOL._serialized_start=92
  _CONFIGKEY_BOOL._serialized_end=722
  _CONFIGKEY_STRING._serialized_start=724
  _CONFIGKEY_STRING._serialized_end=827
  _GETCONFIGBOOLREQUEST._serialized_start=829
  _GETCONFIGBOOLREQUEST._serialized_end=893
  _SETCONFIGBOOLREQUEST._serialized_start=895
  _SETCONFIGBOOLREQUEST._serialized_end=992
  _GETCONFIGSTRINGREQUEST._serialized_start=994
  _GETCONFIGSTRINGREQUEST._serialized_end=1062
  _SETCONFIGSTRINGREQUEST._serialized_start=1064
  _SETCONFIGSTRINGREQUEST._serialized_end=1165
  _OPTIONALSTRINGCONFIGKEY._serialized_start=1167
  _OPTIONALSTRINGCONFIGKEY._serialized_end=1236
  _SETCONFIGJSONREQUEST._serialized_start=1238
  _SETCONFIGJSONREQUEST._serialized_end=1311
  _PREFERENCES._serialized_start=1314
  _PREFERENCES._serialized_end=2247
  _PREFERENCES_SCHEDULING._serialized_start=1549
  _PREFERENCES_SCHEDULING._serialized_end=1792
  _PREFERENCES_SCHEDULING_NEWREVIEWMIX._serialized_start=1728
  _PREFERENCES_SCHEDULING_NEWREVIEWMIX._serialized_end=1792
  _PREFERENCES_REVIEWING._serialized_start=1795
  _PREFERENCES_REVIEWING._serialized_end=1974
  _PREFERENCES_EDITING._serialized_start=1977
  _PREFERENCES_EDITING._serialized_end=2152
  _PREFERENCES_BACKUPLIMITS._serialized_start=2154
  _PREFERENCES_BACKUPLIMITS._serialized_end=2247
  _CONFIGSERVICE._serialized_start=2250
  _CONFIGSERVICE._serialized_end=3057
  _BACKENDCONFIGSERVICE._serialized_start=3059
  _BACKENDCONFIGSERVICE._serialized_end=3081
# @@protoc_insertion_point(module_scope)
