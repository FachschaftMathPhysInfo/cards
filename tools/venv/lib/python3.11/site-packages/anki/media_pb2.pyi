"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright: Ankitects Pty Ltd and contributors
License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CheckMediaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNUSED_FIELD_NUMBER: builtins.int
    MISSING_FIELD_NUMBER: builtins.int
    MISSING_MEDIA_NOTES_FIELD_NUMBER: builtins.int
    REPORT_FIELD_NUMBER: builtins.int
    HAVE_TRASH_FIELD_NUMBER: builtins.int
    @property
    def unused(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def missing(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def missing_media_notes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    report: builtins.str
    have_trash: builtins.bool
    def __init__(
        self,
        *,
        unused: collections.abc.Iterable[builtins.str] | None = ...,
        missing: collections.abc.Iterable[builtins.str] | None = ...,
        missing_media_notes: collections.abc.Iterable[builtins.int] | None = ...,
        report: builtins.str = ...,
        have_trash: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["have_trash", b"have_trash", "missing", b"missing", "missing_media_notes", b"missing_media_notes", "report", b"report", "unused", b"unused"]) -> None: ...

global___CheckMediaResponse = CheckMediaResponse

@typing_extensions.final
class TrashMediaFilesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FNAMES_FIELD_NUMBER: builtins.int
    @property
    def fnames(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        fnames: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fnames", b"fnames"]) -> None: ...

global___TrashMediaFilesRequest = TrashMediaFilesRequest

@typing_extensions.final
class AddMediaFileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DESIRED_NAME_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    desired_name: builtins.str
    data: builtins.bytes
    def __init__(
        self,
        *,
        desired_name: builtins.str = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "desired_name", b"desired_name"]) -> None: ...

global___AddMediaFileRequest = AddMediaFileRequest
