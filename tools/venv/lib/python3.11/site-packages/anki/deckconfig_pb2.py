# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/deckconfig.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2
from anki import decks_pb2 as anki_dot_decks__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x61nki/deckconfig.proto\x12\x0f\x61nki.deckconfig\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\x1a\x10\x61nki/decks.proto\"\x1c\n\x0c\x44\x65\x63kConfigId\x12\x0c\n\x04\x64\x63id\x18\x01 \x01(\x03\"\xcf\x12\n\nDeckConfig\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nmtime_secs\x18\x03 \x01(\x03\x12\x0b\n\x03usn\x18\x04 \x01(\x05\x12\x32\n\x06\x63onfig\x18\x05 \x01(\x0b\x32\".anki.deckconfig.DeckConfig.Config\x1a\xd1\x11\n\x06\x43onfig\x12\x13\n\x0blearn_steps\x18\x01 \x03(\x02\x12\x15\n\rrelearn_steps\x18\x02 \x03(\x02\x12\x13\n\x0bnew_per_day\x18\t \x01(\r\x12\x17\n\x0freviews_per_day\x18\n \x01(\r\x12\x1b\n\x13new_per_day_minimum\x18# \x01(\r\x12\x14\n\x0cinitial_ease\x18\x0b \x01(\x02\x12\x17\n\x0f\x65\x61sy_multiplier\x18\x0c \x01(\x02\x12\x17\n\x0fhard_multiplier\x18\r \x01(\x02\x12\x18\n\x10lapse_multiplier\x18\x0e \x01(\x02\x12\x1b\n\x13interval_multiplier\x18\x0f \x01(\x02\x12\x1f\n\x17maximum_review_interval\x18\x10 \x01(\r\x12\x1e\n\x16minimum_lapse_interval\x18\x11 \x01(\r\x12 \n\x18graduating_interval_good\x18\x12 \x01(\r\x12 \n\x18graduating_interval_easy\x18\x13 \x01(\r\x12T\n\x15new_card_insert_order\x18\x14 \x01(\x0e\x32\x35.anki.deckconfig.DeckConfig.Config.NewCardInsertOrder\x12Z\n\x18new_card_gather_priority\x18\" \x01(\x0e\x32\x38.anki.deckconfig.DeckConfig.Config.NewCardGatherPriority\x12P\n\x13new_card_sort_order\x18  \x01(\x0e\x32\x33.anki.deckconfig.DeckConfig.Config.NewCardSortOrder\x12=\n\x07new_mix\x18\x1e \x01(\x0e\x32,.anki.deckconfig.DeckConfig.Config.ReviewMix\x12H\n\x0creview_order\x18! \x01(\x0e\x32\x32.anki.deckconfig.DeckConfig.Config.ReviewCardOrder\x12K\n\x15interday_learning_mix\x18\x1f \x01(\x0e\x32,.anki.deckconfig.DeckConfig.Config.ReviewMix\x12\x44\n\x0cleech_action\x18\x15 \x01(\x0e\x32..anki.deckconfig.DeckConfig.Config.LeechAction\x12\x17\n\x0fleech_threshold\x18\x16 \x01(\r\x12\x18\n\x10\x64isable_autoplay\x18\x17 \x01(\x08\x12\x1f\n\x17\x63\x61p_answer_time_to_secs\x18\x18 \x01(\r\x12\x12\n\nshow_timer\x18\x19 \x01(\x08\x12+\n#skip_question_when_replaying_answer\x18\x1a \x01(\x08\x12\x10\n\x08\x62ury_new\x18\x1b \x01(\x08\x12\x14\n\x0c\x62ury_reviews\x18\x1c \x01(\x08\x12\x1e\n\x16\x62ury_interday_learning\x18\x1d \x01(\x08\x12\x0e\n\x05other\x18\xff\x01 \x01(\x0c\"U\n\x12NewCardInsertOrder\x12\x1d\n\x19NEW_CARD_INSERT_ORDER_DUE\x10\x00\x12 \n\x1cNEW_CARD_INSERT_ORDER_RANDOM\x10\x01\"\xed\x01\n\x15NewCardGatherPriority\x12!\n\x1dNEW_CARD_GATHER_PRIORITY_DECK\x10\x00\x12,\n(NEW_CARD_GATHER_PRIORITY_LOWEST_POSITION\x10\x01\x12-\n)NEW_CARD_GATHER_PRIORITY_HIGHEST_POSITION\x10\x02\x12)\n%NEW_CARD_GATHER_PRIORITY_RANDOM_NOTES\x10\x03\x12)\n%NEW_CARD_GATHER_PRIORITY_RANDOM_CARDS\x10\x04\"\xdb\x01\n\x10NewCardSortOrder\x12 \n\x1cNEW_CARD_SORT_ORDER_TEMPLATE\x10\x00\x12\x1f\n\x1bNEW_CARD_SORT_ORDER_NO_SORT\x10\x01\x12,\n(NEW_CARD_SORT_ORDER_TEMPLATE_THEN_RANDOM\x10\x02\x12\x31\n-NEW_CARD_SORT_ORDER_RANDOM_NOTE_THEN_TEMPLATE\x10\x03\x12#\n\x1fNEW_CARD_SORT_ORDER_RANDOM_CARD\x10\x04\"\xe4\x02\n\x0fReviewCardOrder\x12\x19\n\x15REVIEW_CARD_ORDER_DAY\x10\x00\x12#\n\x1fREVIEW_CARD_ORDER_DAY_THEN_DECK\x10\x01\x12#\n\x1fREVIEW_CARD_ORDER_DECK_THEN_DAY\x10\x02\x12)\n%REVIEW_CARD_ORDER_INTERVALS_ASCENDING\x10\x03\x12*\n&REVIEW_CARD_ORDER_INTERVALS_DESCENDING\x10\x04\x12$\n REVIEW_CARD_ORDER_EASE_ASCENDING\x10\x05\x12%\n!REVIEW_CARD_ORDER_EASE_DESCENDING\x10\x06\x12*\n&REVIEW_CARD_ORDER_RELATIVE_OVERDUENESS\x10\x07\x12\x1c\n\x18REVIEW_CARD_ORDER_RANDOM\x10\x08\"i\n\tReviewMix\x12\x1f\n\x1bREVIEW_MIX_MIX_WITH_REVIEWS\x10\x00\x12\x1c\n\x18REVIEW_MIX_AFTER_REVIEWS\x10\x01\x12\x1d\n\x19REVIEW_MIX_BEFORE_REVIEWS\x10\x02\"B\n\x0bLeechAction\x12\x18\n\x14LEECH_ACTION_SUSPEND\x10\x00\x12\x19\n\x15LEECH_ACTION_TAG_ONLY\x10\x01J\x04\x08\x03\x10\t\"\x85\x06\n\x14\x44\x65\x63kConfigsForUpdate\x12I\n\nall_config\x18\x01 \x03(\x0b\x32\x35.anki.deckconfig.DeckConfigsForUpdate.ConfigWithExtra\x12G\n\x0c\x63urrent_deck\x18\x02 \x01(\x0b\x32\x31.anki.deckconfig.DeckConfigsForUpdate.CurrentDeck\x12-\n\x08\x64\x65\x66\x61ults\x18\x03 \x01(\x0b\x32\x1b.anki.deckconfig.DeckConfig\x12\x17\n\x0fschema_modified\x18\x04 \x01(\x08\x12\x14\n\x0cv3_scheduler\x18\x05 \x01(\x08\x12\x1d\n\x15\x63\x61rd_state_customizer\x18\x06 \x01(\t\x12%\n\x1dnew_cards_ignore_review_limit\x18\x07 \x01(\x08\x1aQ\n\x0f\x43onfigWithExtra\x12+\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x1b.anki.deckconfig.DeckConfig\x12\x11\n\tuse_count\x18\x02 \x01(\r\x1a\xe1\x02\n\x0b\x43urrentDeck\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tconfig_id\x18\x02 \x01(\x03\x12\x19\n\x11parent_config_ids\x18\x03 \x03(\x03\x12H\n\x06limits\x18\x04 \x01(\x0b\x32\x38.anki.deckconfig.DeckConfigsForUpdate.CurrentDeck.Limits\x1a\xcb\x01\n\x06Limits\x12\x13\n\x06review\x18\x01 \x01(\rH\x00\x88\x01\x01\x12\x10\n\x03new\x18\x02 \x01(\rH\x01\x88\x01\x01\x12\x19\n\x0creview_today\x18\x03 \x01(\rH\x02\x88\x01\x01\x12\x16\n\tnew_today\x18\x04 \x01(\rH\x03\x88\x01\x01\x12\x1b\n\x13review_today_active\x18\x05 \x01(\x08\x12\x18\n\x10new_today_active\x18\x06 \x01(\x08\x42\t\n\x07_reviewB\x06\n\x04_newB\x0f\n\r_review_todayB\x0c\n\n_new_today\"\xa7\x02\n\x18UpdateDeckConfigsRequest\x12\x16\n\x0etarget_deck_id\x18\x01 \x01(\x03\x12,\n\x07\x63onfigs\x18\x02 \x03(\x0b\x32\x1b.anki.deckconfig.DeckConfig\x12\x1a\n\x12removed_config_ids\x18\x03 \x03(\x03\x12\x19\n\x11\x61pply_to_children\x18\x04 \x01(\x08\x12\x1d\n\x15\x63\x61rd_state_customizer\x18\x05 \x01(\t\x12H\n\x06limits\x18\x06 \x01(\x0b\x32\x38.anki.deckconfig.DeckConfigsForUpdate.CurrentDeck.Limits\x12%\n\x1dnew_cards_ignore_review_limit\x18\x07 \x01(\x08\x32\xf6\x04\n\x11\x44\x65\x63kConfigService\x12P\n\x1b\x41\x64\x64OrUpdateDeckConfigLegacy\x12\x12.anki.generic.Json\x1a\x1d.anki.deckconfig.DeckConfigId\x12K\n\rGetDeckConfig\x12\x1d.anki.deckconfig.DeckConfigId\x1a\x1b.anki.deckconfig.DeckConfig\x12>\n\x13\x41llDeckConfigLegacy\x12\x13.anki.generic.Empty\x1a\x12.anki.generic.Json\x12H\n\x13GetDeckConfigLegacy\x12\x1d.anki.deckconfig.DeckConfigId\x1a\x12.anki.generic.Json\x12>\n\x13NewDeckConfigLegacy\x12\x13.anki.generic.Empty\x1a\x12.anki.generic.Json\x12\x46\n\x10RemoveDeckConfig\x12\x1d.anki.deckconfig.DeckConfigId\x1a\x13.anki.generic.Empty\x12T\n\x17GetDeckConfigsForUpdate\x12\x12.anki.decks.DeckId\x1a%.anki.deckconfig.DeckConfigsForUpdate\x12Z\n\x11UpdateDeckConfigs\x12).anki.deckconfig.UpdateDeckConfigsRequest\x1a\x1a.anki.collection.OpChanges2\x1a\n\x18\x42\x61\x63kendDeckConfigServiceB\x0c\x42\x08\x44\x65\x63kConfP\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'anki.deckconfig_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\010DeckConfP\001'
  _DECKCONFIGID._serialized_start=103
  _DECKCONFIGID._serialized_end=131
  _DECKCONFIG._serialized_start=134
  _DECKCONFIG._serialized_end=2517
  _DECKCONFIG_CONFIG._serialized_start=260
  _DECKCONFIG_CONFIG._serialized_end=2517
  _DECKCONFIG_CONFIG_NEWCARDINSERTORDER._serialized_start=1430
  _DECKCONFIG_CONFIG_NEWCARDINSERTORDER._serialized_end=1515
  _DECKCONFIG_CONFIG_NEWCARDGATHERPRIORITY._serialized_start=1518
  _DECKCONFIG_CONFIG_NEWCARDGATHERPRIORITY._serialized_end=1755
  _DECKCONFIG_CONFIG_NEWCARDSORTORDER._serialized_start=1758
  _DECKCONFIG_CONFIG_NEWCARDSORTORDER._serialized_end=1977
  _DECKCONFIG_CONFIG_REVIEWCARDORDER._serialized_start=1980
  _DECKCONFIG_CONFIG_REVIEWCARDORDER._serialized_end=2336
  _DECKCONFIG_CONFIG_REVIEWMIX._serialized_start=2338
  _DECKCONFIG_CONFIG_REVIEWMIX._serialized_end=2443
  _DECKCONFIG_CONFIG_LEECHACTION._serialized_start=2445
  _DECKCONFIG_CONFIG_LEECHACTION._serialized_end=2511
  _DECKCONFIGSFORUPDATE._serialized_start=2520
  _DECKCONFIGSFORUPDATE._serialized_end=3293
  _DECKCONFIGSFORUPDATE_CONFIGWITHEXTRA._serialized_start=2856
  _DECKCONFIGSFORUPDATE_CONFIGWITHEXTRA._serialized_end=2937
  _DECKCONFIGSFORUPDATE_CURRENTDECK._serialized_start=2940
  _DECKCONFIGSFORUPDATE_CURRENTDECK._serialized_end=3293
  _DECKCONFIGSFORUPDATE_CURRENTDECK_LIMITS._serialized_start=3090
  _DECKCONFIGSFORUPDATE_CURRENTDECK_LIMITS._serialized_end=3293
  _UPDATEDECKCONFIGSREQUEST._serialized_start=3296
  _UPDATEDECKCONFIGSREQUEST._serialized_end=3591
  _DECKCONFIGSERVICE._serialized_start=3594
  _DECKCONFIGSERVICE._serialized_end=4224
  _BACKENDDECKCONFIGSERVICE._serialized_start=4226
  _BACKENDDECKCONFIGSERVICE._serialized_end=4252
# @@protoc_insertion_point(module_scope)
